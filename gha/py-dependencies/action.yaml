---
name: Install Python Dependencies
description: |
  Install python dependencies required for StackStorm-Exchange pack tests.
  Before using this, make sure to run
  StackStorm-Exchange/ci/gha/checkout and
  StackStorm-Exchange/ci/gha/apt-dependencies.
author: StackStorm

inputs:
  python-version:
    required: true
    description: Which python version we should install
  cache-version:
    required: false
    default: "v0"

outputs:
  pip-version:
    description: The installed pip version (pulled from st2.git)
    value: ${{ steps.virtualenv.outputs.pip-version }}

runs:
  using: "composite"
  steps:

    - name: Add VIRTUALENV_DIR to env context
      shell: bash
      run: |
        echo "VIRTUALENV_DIR=${HOME}/virtualenv" >> ${GITHUB_ENV}

    - name: 'Set up Python (${{ inputs.python-version }})'
      uses: actions/setup-python@v2
      with:
        python-version: '${{ inputs.python-version }}'

    - name: Cache Python Dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
          ~/virtualenv
        key: ${{ runner.os }}-python-${{ inputs.python-version }}-${{ inputs.cache-version }}-${{ hashFiles('st2/requirements.txt', 'pack/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ inputs.python-version }}-${{ inputs.cache-version }}-

    - name: Install virtualenv
      shell: bash
      # this should run in the st2 checkout
      working-directory: st2
      run: |
        ./scripts/github/install-virtualenv.sh

    - name: Create ~/virtualenv
      shell: bash
      id: virtualenv
      # this should run in the st2 checkout
      working-directory: st2
      run: |
        printf "\n==================== virtualenv ====================\n\n"
        PIP_VERSION=$(grep '^PIP_VERSION' Makefile | awk '{print $3}')
        echo "::set-output name=pip-version::${PIP_VERSION}"
        [[ -x "${VIRTUALENV_DIR}/bin/python" ]] || virtualenv --pip "${PIP_VERSION}" ~/virtualenv
        ${VIRTUALENV_DIR}/bin/pip install -q -U "pip==${PIP_VERSION}" setuptools
        printf "\n==================== requirements-ci ====================\n\n"
        ${VIRTUALENV_DIR}/bin/pip install -q -r ${CI_DIR}/.circle/requirements-dev.txt
        ${VIRTUALENV_DIR}/bin/pip install -q -r ${CI_DIR}/.circle/requirements-pack-tests.txt

    - name: Install StackStorm requirements
      # this should run in the st2 checkout
      shell: bash
      working-directory: st2
      run: |
        ${VIRTUALENV_DIR}/bin/pip install -q -r requirements.txt

    - name: Install runners
      shell: bash
      run: |
        printf "\n================== install runners ====================\n\n"
        for runner in ${ST2_REPO_PATH}/contrib/runners/*; do
        echo "==========================================================="
        echo "Installing runner:" ${runner##*/}
        echo "==========================================================="
        (. ${VIRTUALENV_DIR}/bin/activate; cd $runner; python setup.py develop)
        done
        printf "\n================== register metrics drivers ======================\n\n"
        # Install st2common to register metrics drivers
        (. ${VIRTUALENV_DIR}/bin/activate; cd ${ST2_REPO_PATH}/st2common; python setup.py develop)

    - name: Install pack requirements
      shell: bash
      working-directory: pack
      env:
        PACK_REQUIREMENTS_FILE: requirements.txt
        PACK_TESTS_REQUIREMENTS_FILE: requirements-tests.txt
      run: |
        if [[ -f "${PACK_REQUIREMENTS_FILE}" ]]; then
        echo "Installing pack requirements from ${PACK_REQUIREMENTS_FILE}"
        ${VIRTUALENV_DIR}/bin/pip install -r "${PACK_REQUIREMENTS_FILE}"
        fi
        if [[ -f "${PACK_TESTS_REQUIREMENTS_FILE}" ]]; then
        echo "Installing pack tests requirements from ${PACK_TESTS_REQUIREMENTS_FILE}"
        ${VIRTUALENV_DIR}/bin/pip install -r "${PACK_TESTS_REQUIREMENTS_FILE}"
        fi

    - name: Print versions
      shell: bash
      run: |
        source ${VIRTUALENV_DIR}/bin/activate
        python3 --version
        pip --version
        virtualenv --version
