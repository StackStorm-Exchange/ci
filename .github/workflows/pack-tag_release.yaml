name: Tag Release

on:
  workflow_call:
#    inputs:

jobs:
  tag_release:
    runs-on: ubuntu-latest
    name: 'Tag Release'
    steps:
      - name: Checkout Pack Repo
        uses: actions/checkout@v2
        with:
          repository: lm-ydubler/logicmonitor-stackstorm-pack
          fetch-depth: 0
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version from pack.yaml
        #shell: bash
        id: pack-version
        uses: mikefarah/yq@master
        with:
          cmd: echo ::set-output name=result::$(yq eval '.version' pack.yaml)
        #run: |
         # pwd
          #ls
          #sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys CC86BB64
          #sudo add-apt-repository ppa:rmescandon/yq
          #sudo apt update
          #sudo apt install yq -y
          #version="$()"
          #echo pack-version=$version
          #echo ::set-output name=result::$(yq eval '.version' pack.yaml)

      - name: Get latest git tag
        shell: bash
        run: |
            if LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`); then
              echo "LATEST_TAG=${LATEST_TAG}" | tee -a ${GITHUB_ENVIRONMENT}
            else
              echo 'LATEST_TAG=""' >> ${GITHUB_ENVIRONMENT}
              echo There are no tags yet.
            fi

      - name: Add Tag If Required
        if:  ${{ env.LATEST_TAG != format('v{0}', steps.pack-version.outputs.result) && steps.pack-version.outputs.result != '' }}
        shell: bash
        run: |
          ###################################################
          # Create new tag on most recent commit
          ###################################################
          echo LATEST_TAG does not match PACK_VERSION.       
          echo PACK_VERSION1 = ${steps.pack-version.outputs.result}
          echo PACK_VERSION2 = ${{steps.pack-version.outputs.result}}
          echo PACK_VERSION1 = v${steps.pack-version.outputs.result}
          echo PACK_VERSION2 = v${{steps.pack-version.outputs.result}}
          echo "... creating new tag with version on most recent commit aka HEAD ..."
          # git tag "v${{steps.pack-version.outputs.result}}" HEAD
          ##############################################################
          # Verify tag was created and exists on the most recent commit
          ##############################################################
          echo Listing tags...
          git tag
          echo Review most recent commit - this should show the tag we just created:
          git log --pretty='%h %d' --max-count=1
          ##########################################
          # Push tag to origin repository (success!)
          ##########################################
          echo Pushing new tag to origin...
          # git push origin "v${{steps.pack-version.outputs.result}}"
