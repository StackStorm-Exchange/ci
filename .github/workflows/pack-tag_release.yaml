name: Tag Release

on:
  workflow_call:
#    inputs:

jobs:
  tag_release:
    runs-on: ubuntu-latest
    name: 'Tag Release'
    steps:
      - name: Checkout Pack Repo
        uses: actions/checkout@v2

      - name: Get version from pack.yaml
        shell: bash
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.16.1/yq_linux_amd64 -O ~/yq
          chmod +x ~/yq
          PACK_VERSION=$(~/yq eval '.version' pack.yaml)
          echo "PACK_VERSION=${PACK_VERSION}" | tee -a >> $GITHUB_ENV

      - name: Get latest git tag
        shell: bash
        id: latest-tag
        run: |
          ################################
          # GET LATEST TAG FROM PACK REPO
          ################################
          if LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`); then
            # echo "LATEST_TAG=${LATEST_TAG}" | tee -a ${GITHUB_ENVIRONMENT} # doesn't work
            echo LATEST_TAG=$LATEST_TAG
            echo "LATEST_TAG=${LATEST_TAG}" | tee -a >> $GITHUB_ENV
            #echo ::set-output name=LATEST_TAG::$LATEST_TAG
          else
            # echo 'LATEST_TAG=""' >> ${GITHUB_ENVIRONMENT} # doesn't work
            echo 'LATEST_TAG=""' >> $GITHUB_ENV
            echo There are no tags yet.
          fi

      - name: Add Tag If Required
        if:  ${{ env.LATEST_TAG != format('v{0}', env.PACK_VERSION) && env.PACK_VERSION != '' }}
        shell: bash
        run: |
          ###################################################
          # Create new tag on most recent commit
          ###################################################
          echo LATEST_TAG=${{env.LATEST_TAG}}
          echo PACK_VERSION=v${PACK_VERSION}
          echo LATEST_TAG != PACK_VERSION!
          echo Creating tag named v${PACK_VERSION} on most recent commit aka HEAD ...
          git tag "v${PACK_VERSION}" HEAD
          ##############################################################
          # Verify tag was created and exists on the most recent commit
          ##############################################################
          echo Look at the list of tags to make sure it exists:
          git tag
          echo Review most recent commit to make ensure the tag is associated with it:
          git log --pretty='%h %d' --max-count=1
          ##########################################
          # Push tag to origin repository (success!)
          ##########################################
          echo Pushing new tag to origin...
          git push origin "v${PACK_VERSION}"
