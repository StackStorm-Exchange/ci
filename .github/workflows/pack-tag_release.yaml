name: Tag Release

on:
  workflow_call:
#    inputs:

jobs:
  tag_release:
    runs-on: ubuntu-latest
    name: 'Tag Release'
    steps:
      - name: Checkout Pack Repo
        uses: actions/checkout@v2
        with:
          repository: lm-ydubler/logicmonitor-stackstorm-pack
          fetch-depth: 0
          #repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version from pack.yaml
        shell: bash
        id: pack-version
        #uses: mikefarah/yq@master
        #with:
           #cmd: echo ::set-output name=result::$(yq eval '.version' pack.yaml)
        run: |
          pwd
          ls
          #############
          # INSTALL YQ
          #############
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys CC86BB64
          sudo add-apt-repository ppa:rmescandon/yq
          sudo apt update
          sudo apt install yq -y
          ###################################
          # MAKE VERSION AN OUTPUT PARAMETER
          ###################################
          echo ::set-output name=RESULT::$(yq eval '.version' pack.yaml)

      - name: Get latest git tag
        shell: bash
        id: latest-tag
        run: |
          ################################
          # GET LATEST TAG FROM PACK REPO
          ################################
          if LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`); then
            # echo "LATEST_TAG=${LATEST_TAG}" | tee -a ${GITHUB_ENVIRONMENT} # doesn't work
            echo "LATEST_TAG=${LATEST_TAG}" | tee -a >> $GITHUB_ENV
            #echo ::set-output name=LATEST_TAG::$LATEST_TAG
          else
            # echo 'LATEST_TAG=""' >> ${GITHUB_ENVIRONMENT} # doesn't work
            echo 'LATEST_TAG=""' >> $GITHUB_ENV
            echo There are no tags yet.
          fi

      - name: Add Tag If Required
        if:  ${{ env.LATEST_TAG != format('v{0}', steps.pack-version.outputs.RESULT) && steps.pack-version.outputs.RESULT != '' }}
        #if: ${{  steps.latest-tag.outputs.LATEST_TAG != format('v{0}', steps.pack-version.outputs.RESULT) && steps.pack-version.outputs.RESULT != '' }}
        env:
          PACK_VERSION: ${{steps.pack-version.outputs.RESULT}}
          LATEST_TAG: ${{steps.latest-tag.outputs.LATEST_TAG}}
        shell: bash
        run: |
          ###################################################
          # Create new tag on most recent commit
          ###################################################
          echo LATEST_TAG=${env.LATEST_TAG}
          echo PACK_VERSION=v${PACK_VERSION}
          echo LATEST_TAG != PACK_VERSION!
          echo "... creating new tag with version on most recent commit aka HEAD ..."
          git tag "v${PACK_VERSION}" HEAD
          ##############################################################
          # Verify tag was created and exists on the most recent commit
          ##############################################################
          echo Listing tags... -for debug-
          git tag
          echo Review most recent commit - this should show the tag we just created -for debug- :
          git log --pretty='%h %d' --max-count=1
          ##########################################
          # Push tag to origin repository (success!)
          ##########################################
          echo Pushing new tag to origin...
          git push origin "v${PACK_VERSION}"
