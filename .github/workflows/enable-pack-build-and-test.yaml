name: Enable Pack Build and Test

on:
  # Daily at 3 in the morning
  schedule:
    - cron: "0 3 * * *"
  # manual rebuilds by TSC members
  workflow_dispatch:

env:
  ci_branch: master
  exchange_tools_branch: master
  packs_org: StackStorm-Exchange
  pack_repo_prefix: stackstorm
  # We need to be able to enable Workflows in all the repositories under the
  # StackStorm Exchange GitHub Organization. We are using the GitHub CLI (gh).
  # At the time of writing, it appears that fine grained PATs do not work with
  # GraphQL. As such, this only leaves the classic PATs. The bare minimum
  # permissions of repo:* and workflow are enough.
  GH_TOKEN: ${{ secrets.GH_ORG_CI_TOKEN }}

# Only allow one workflow run per branch at a time.
# When one is already running, new runs will be pending.
# https://github.blog/changelog/2021-04-19-github-actions-limit-workflow-run-or-job-concurrency/
concurrency:
  group: enable-pack-build-and-test-${{ github.ref }}
  # Do not use cancel-in-progress! Or we might create a scenario where all workflows get canceled before they complete.

permissions:
  contents: read # Need to clone repositories

jobs:
  enable_pack_build_and_test_workflow:
    runs-on: ubuntu-20.04
    name: Enable Pack Build and Test workflow

    steps:
      - name: Add checkout paths to env context
        shell: bash
        run: |
          echo "CI_DIR=${{ github.workspace }}/ci" >> ${GITHUB_ENV}
          echo "TOOLS_DIR=${{ github.workspace }}/exchange-tools" >> ${GITHUB_ENV}
          echo "PACKS_PATH=${{ github.workspace }}/packs" >> ${GITHUB_ENV}

      - name: Checkout ci repo
        uses: actions/checkout@v2
        with:
          repository: StackStorm-Exchange/ci
          ref: ${{ env.ci_branch }}
          path: ci
          fetch-depth: 1

      - name: Checkout exchange-tools repo
        uses: actions/checkout@v2
        with:
          repository: StackStorm-Exchange/exchange-tools
          ref: ${{ env.exchange_tools_branch }}
          path: exchange-tools
          fetch-depth: 1

      - name: Checkout Pack Repos and enable their Build and Test Workflow
        shell: bash
        env:
          PACKS_ORG: ${{ env.packs_org }}
          PACKS_PREFIX: ${{ env.pack_repo_prefix }}
        run: |
          mkdir -p ${PACKS_PATH}
          cd ${PACKS_PATH}
          source ${TOOLS_DIR}/functions.sh
          for repo_name in $(_gh_list_repo_names ${PACKS_ORG} ${PACKS_PREFIX}); do
            echo "::group::Clone ${PACKS_ORG}/${repo_name}"
            gh repo clone "${PACKS_ORG}/${repo_name}"
            if latestTag=$(git -C ${repo_name} describe --tags `git -C ${repo_name} rev-list --tags --max-count=1`); then
              echo latestTag = $latestTag
              git -C ${repo_name} checkout $latestTag -b latestTagBranch
            fi
            echo
            echo "::endgroup::" # DELETED notices will not be folded to simplify scanning action output
            if [[ -z "$latestTag" ]]; then
              rm -rf ${repo_name}
              echo "DELETED clone of ${PACKS_ORG}/${repo_name}: missing git tags"
              echo "${PACKS_ORG}/${repo_name}" >> ${GITHUB_WORKSPACE}/bad_pack_repos
            elif [[ ! -f "./${repo_name}/pack.yaml" ]]; then
              rm -rf ${repo_name}
              echo "DELETED clone of ${PACKS_ORG}/${repo_name}: missing pack.yaml"
              echo "${PACKS_ORG}/${repo_name}" >> ${GITHUB_WORKSPACE}/bad_pack_repos
            else
              #
              #  This is not a bad Pack, ensure the Build and Test workflow is active
              #
              WORKFLOW_PATH="repos/${PACKS_ORG}/${repo_name}/actions/workflows/build_and_test.yaml"
              WORKFLOW_NAME="CI"
              echo "::group::Ensure ${WORKFLOW_NAME} workflow for ${PACKS_ORG}/${repo_name} is active"
              if gh api --silent --method GET ${WORKFLOW_PATH} 2>/dev/null; then
                echo "GitHub ${WORKFLOW_NAME} workflow found for ${PACKS_ORG}/${repo_name}"
                if [[ "$(gh api --method GET ${WORKFLOW_PATH} --jq .state)" != "active" ]]; then
                  echo "::notice::GitHub ${WORKFLOW_NAME} workflow for ${PACKS_ORG}/${repo_name} not active, enabling"
                  gh workflow enable $WORKFLOW_NAME --repo ${PACKS_ORG}/${repo_name}
                  if [[ "$(gh api --method GET ${WORKFLOW_PATH} --jq .state)" != "active" ]]; then
                    echo "::error::Failed enabling GitHub ${WORKFLOW_NAME} workflow for ${PACKS_ORG}/${repo_name}"
                  fi
                else
                  echo "GitHub ${WORKFLOW_NAME} workflow for ${PACKS_ORG}/${repo_name} is already active"
                fi
              else
                echo "::warning::No GitHub ${WORKFLOW_NAME} workflow found for ${PACKS_ORG}/${repo_name}"
              fi
              echo "::endgroup::"
            fi
          done
          if [[ -f ${GITHUB_WORKSPACE}/bad_pack_repos ]]; then
            echo "These repos were DELETED. See above for why."
            cat ${GITHUB_WORKSPACE}/bad_pack_repos
          fi
