---
name: Install APT Dependencies
description: |
  Install debian dependencies required for StackStorm-Exchange pack tests.
  Before using this, make sure to run
  StackStorm-Exchange/ci/.github/actions/checkout.
author: StackStorm

inputs:
  cache-version:
    required: false
    default: "v0"
  extra-apt-packages-file:
    required: false
    default: pack/.github/apt-packages.txt

runs:
  using: "composite"
  steps:

    - name: Create a directory for debian packages so we can cache it
      # this is what we did on CircleCI. Not sure if it'll work on GHA
      shell: bash
      run: >
        sudo rm -rf /var/cache/apt/archives /var/lib/apt/lists
        && sudo ln -s ~/apt_cache/archives /var/cache/apt/archives
        && sudo ln -s ~/apt_cache/lists /var/lib/apt/lists
        && mkdir -p ~/apt_cache/archives/partial ~/apt_cache/lists

    # hashFiles only reads files relative to GITHUB_WORKSPACE
    - name: Copy apt-packages.txt for caching
      shell: bash
      run: |
        cp ${{ github.action_path }}/apt-packages.txt ${GITHUB_WORKSPACE}/
        if [[ -f ${{ inputs.extra-apt-packages-file }} ]]; then
        cat ${{ inputs.extra-apt-packages-file }} >> ${GITHUB_WORKSPACE}/apt-packages.txt
        fi

    - name: Cache APT Dependencies
      id: cache-apt-deps
      uses: actions/cache@v2
      with:
        path: |
          ~/apt_cache/*.deb
        key: ${{ inputs.cache-version }}-apt-archives-and-lists-${{ hashFiles('apt-packages.txt') }}
        restore-keys: |
          ${{ inputs.cache-version }}-apt-archives-and-lists-

    - name: Install APT Dependencies
      shell: bash
      env:
        CACHE_HIT: ${{steps.cache-apt-deps.outputs.cache-hit}}
        APT_PACKAGES_FILE_PATH: apt-packages.txt
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "::group::Install APT Dependencies"
        if [[ "${CACHE_HIT}" != 'true' ]]; then
        sudo apt-get -o=Dpkg::Use-Pty=0 -yq update
        fi
        APT_PACKAGES=$(grep -v '^#' "${APT_PACKAGES_FILE_PATH}" | xargs echo -n)
        sudo apt-get -o=Dpkg::Use-Pty=0 -yq install ${APT_PACKAGES}
        echo "::endgroup::"

    - name: Print versions
      shell: bash
      run: |
        echo "::group::Print Versions"
        set -ex
        jq --version
        gh --version
        echo "::endgroup::"
